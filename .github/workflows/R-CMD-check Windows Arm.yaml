# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

name: R-CMD-check-Windows-Arm

permissions: read-all

jobs:
  Windows-ARM:
    if: '! github.event.pull_request.draft'
    runs-on: windows-11-arm

    name: Windows ARM - R Release

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Download R
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://cran.r-project.org/bin/windows/base/R-4.5.1-win.exe" -OutFile "R.exe"
          Invoke-WebRequest -Uri "https://cloud.r-project.org/bin/windows/Rtools/rtools45/files/rtools45-aarch64-6608-6492.exe" -OutFile "rtools.exe"

      - name: Install R
        shell: cmd
        run: start /wait "" R.exe /SILENT

      - name: Install RTools
        shell: cmd
        run: start /wait "" rtools.exe /SILENT

      - name: Setup Rust toolchain for ARM64
        shell: pwsh
        run: |
          Write-Host "Downloading Rust installer for ARM64..."
          rustup default stable-aarch64-pc-windows-gnu
          
          Write-Host "Verifying Rust installation..."
          & "$env:USERPROFILE\.cargo\bin\rustc.exe" --version
          & "$env:USERPROFILE\.cargo\bin\cargo.exe" --version
          & "$env:USERPROFILE\.cargo\bin\rustup.exe" target list --installed

      - name: Add Rust to PATH
        shell: pwsh
        run: |
          echo "$env:USERPROFILE\.cargo\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Set ARM64 environment and verify build tools
        shell: pwsh
        run: |
          echo "R_PKG_TARGET_ARCH=ARM64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "PROCESSOR_ARCHITECTURE=ARM64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          
          # Verify build environment
          Write-Host "=== Build Environment Verification ==="
          Write-Host "Architecture: $env:PROCESSOR_ARCHITECTURE"
          Write-Host "R Version:"
          & R --version
          Write-Host "RTools Path:"
          if (Test-Path "C:\rtools45\usr\bin\gcc.exe") {
            Write-Host "GCC found at C:\rtools45\usr\bin\gcc.exe"
            & "C:\rtools45\usr\bin\gcc.exe" --version
          } else {
            Write-Host "GCC not found at expected location"
            Get-ChildItem "C:\rtools45" -Recurse -Name "gcc.exe" | Select-Object -First 5
          }
          Write-Host "==================================="

      - name: Setup R packages
        run: |
          Rscript -e 'install.packages(c("remotes", "rcmdcheck"), repos = "https://cloud.r-project.org")'
          Rscript -e 'remotes::install_deps(dependencies = TRUE)'
      
      - name: Add R and RTools to PATH
        shell: cmd
        run: |
          echo C:\Program Files\R\R-4.5.1\bin>>%GITHUB_PATH%
          echo C:\rtools45\>>%GITHUB_PATH%

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          build_args: 'c("--no-manual","--compact-vignettes=gs+qpdf")'
